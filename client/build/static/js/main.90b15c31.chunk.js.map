{"version":3,"sources":["App.js","index.js"],"names":["App","state","tasks","currentTask","handleChange","e","setState","target","value","handleSubmit","preventDefault","newTask","task","completed","_id","Date","now","prevState","handleUpdate","id","updatedTasks","map","handleDelete","filteredTasks","filter","this","className","Paper","elevation","onSubmit","style","margin","TextField","variant","size","width","required","onChange","placeholder","Button","height","color","type","Checkbox","checked","onClick","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8RA2FeA,E,4MAtFbC,MAAQ,CAAEC,MAAO,GAAIC,YAAa,I,EAElCC,aAAe,SAACC,GACd,EAAKC,SAAS,CAAEH,YAAaE,EAAEE,OAAOC,S,EAGxCC,aAAe,SAACJ,GACdA,EAAEK,iBACF,IAAMC,EAAU,CAAEC,KAAM,EAAKX,MAAME,YAAaU,WAAW,EAAOC,IAAKC,KAAKC,OAC5E,EAAKV,UAAS,SAACW,GAAD,MAAgB,CAC5Bf,MAAM,GAAD,mBAAMe,EAAUf,OAAhB,CAAuBS,IAC5BR,YAAa,Q,EAIjBe,aAAe,SAACC,GACd,IAAMC,EAAe,EAAKnB,MAAMC,MAAMmB,KAAI,SAACT,GAAD,OACxCA,EAAKE,MAAQK,EAAb,2BAAuBP,GAAvB,IAA6BC,WAAYD,EAAKC,YAAcD,KAE9D,EAAKN,SAAS,CAAEJ,MAAOkB,K,EAGzBE,aAAe,SAACH,GACd,IAAMI,EAAgB,EAAKtB,MAAMC,MAAMsB,QAAO,SAACZ,GAAD,OAAUA,EAAKE,MAAQK,KACrE,EAAKb,SAAS,CAAEJ,MAAOqB,K,4CAGzB,WAAU,IAAD,OACCrB,EAAUuB,KAAKxB,MAAfC,MAER,OACE,qBAAKwB,UAAU,WAAf,SACE,eAACC,EAAA,EAAD,CAAOC,UAAW,EAAGF,UAAU,YAA/B,UACE,qBAAKA,UAAU,UAAf,mBACA,uBACEG,SAAUJ,KAAKhB,aACfiB,UAAU,OACVI,MAAO,CAAEC,OAAQ,UAHnB,UAKE,cAACC,EAAA,EAAD,CACEC,QAAQ,WACRC,KAAK,QACLJ,MAAO,CAAEK,MAAO,OAChB3B,MAAOiB,KAAKxB,MAAME,YAClBiC,UAAU,EACVC,SAAUZ,KAAKrB,aACfkC,YAAY,kBAEd,cAACC,EAAA,EAAD,CACET,MAAO,CAAEU,OAAQ,QACjBC,MAAM,UACNR,QAAQ,WACRS,KAAK,SAJP,yBASF,8BACCxC,EAAMmB,KAAI,SAACT,GAAD,OACjB,eAACe,EAAA,EAAD,CAEID,UAAS,8BAAyBd,EAAKC,UAAY,YAAc,WAFrE,UAII,cAAC8B,EAAA,EAAD,CACIC,QAAShC,EAAKC,UACdgC,QAAS,kBAAM,EAAK3B,aAAaN,EAAKE,MACtC2B,MAAM,YAEV,qBAAKf,UAAWd,EAAKC,UAAY,oBAAsB,OAAvD,SACKD,EAAKA,OAEV,cAAC2B,EAAA,EAAD,CACIM,QAAS,kBAAM,EAAKvB,aAAaV,EAAKE,MACtCY,UAAU,SAFd,sBAXKd,EAAKE,mB,GA7DAgC,IAAMC,WCCxBC,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,W","file":"static/js/main.90b15c31.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Paper, TextField, Checkbox, Button } from \"@material-ui/core\";\r\nimport \"./App.css\";\r\n\r\nclass App extends React.Component {\r\n  state = { tasks: [], currentTask: \"\" };\r\n\r\n  handleChange = (e) => {\r\n    this.setState({ currentTask: e.target.value });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const newTask = { task: this.state.currentTask, completed: false, _id: Date.now() }; // Mock ID for now\r\n    this.setState((prevState) => ({\r\n      tasks: [...prevState.tasks, newTask],\r\n      currentTask: \"\",\r\n    }));\r\n  };\r\n\r\n  handleUpdate = (id) => {\r\n    const updatedTasks = this.state.tasks.map((task) =>\r\n      task._id === id ? { ...task, completed: !task.completed } : task\r\n    );\r\n    this.setState({ tasks: updatedTasks });\r\n  };\r\n\r\n  handleDelete = (id) => {\r\n    const filteredTasks = this.state.tasks.filter((task) => task._id !== id);\r\n    this.setState({ tasks: filteredTasks });\r\n  };\r\n\r\n  render() {\r\n    const { tasks } = this.state;\r\n\r\n    return (\r\n      <div className=\"App flex\">\r\n        <Paper elevation={3} className=\"container\">\r\n          <div className=\"heading\">TO-DO</div>\r\n          <form\r\n            onSubmit={this.handleSubmit}\r\n            className=\"flex\"\r\n            style={{ margin: \"15px 0\" }}\r\n          >\r\n            <TextField\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              style={{ width: \"80%\" }}\r\n              value={this.state.currentTask}\r\n              required={true}\r\n              onChange={this.handleChange}\r\n              placeholder=\"Add New TO-DO\"\r\n            />\r\n            <Button\r\n              style={{ height: \"40px\" }}\r\n              color=\"primary\"\r\n              variant=\"outlined\"\r\n              type=\"submit\"\r\n            >\r\n              Add task\r\n            </Button>\r\n          </form>\r\n          <div>\r\n          {tasks.map((task) => (\r\n    <Paper\r\n        key={task._id}\r\n        className={`flex task_container ${task.completed ? \"completed\" : \"pending\"}`} \r\n    >\r\n        <Checkbox\r\n            checked={task.completed}\r\n            onClick={() => this.handleUpdate(task._id)}\r\n            color=\"primary\"\r\n        />\r\n        <div className={task.completed ? \"task line_through\" : \"task\"}>\r\n            {task.task}\r\n        </div>\r\n        <Button\r\n            onClick={() => this.handleDelete(task._id)}\r\n            className=\"button\"\r\n        >\r\n            delete\r\n        </Button>\r\n    </Paper>\r\n))}\r\n          </div>\r\n        </Paper>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}